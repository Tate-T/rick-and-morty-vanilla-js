import"./modulepreload-polyfill-3cfb730f.js";function i(t){return t.map(e=>`
    <li class="episode" data-id='${e.id}'>
    <div class="episode__div">
        <h2 class="episode__name">${e.name}</h2>
        <div class="episode__dive">
           <p class="episode__text1">Season: <br> <span class="episode__season">${e.episode}</span></p>
           <p class="episode__text2">Air date: <br> <span class="episode__airDate">${e.air_date}</span></p>
        </div>
        <button type="button" class="episode__button"></button>
    </div>
    </li>
    `).join("")}async function u(t){try{return await fetch(`https://rickandmortyapi.com/api/episode?page=${t}`).then(s=>s.json())}catch(s){console.log(s)}}let a=1,d=[];u(a).then(t=>{document.querySelector(".filter__list").innerHTML=i(t.results),console.log(t.results),d=[...d,...t.results],document.querySelector(".filter__list").addEventListener("click",e=>{if(e.target.closest(".episode__button")){document.querySelector(".backdrop").classList.remove("hidden");const c=e.target.closest(".episode"),r=Number(c.dataset.id)-1,o=d[r];document.querySelector(".modal__title").textContent=o.name,console.log(),document.querySelector(".modal__airDate-text").textContent=o.air_date,console.log(o.air_date),document.querySelector(".modal__id-text").textContent=o.id;for(let n=0;n<4;n++)fetch(o.characters[n]).then(l=>l.json()).then(l=>{document.querySelector(`#character${n+1}`).textContent=l.name,document.querySelector(`#image${n+1}`).src=l.image})}}),document.querySelector("#button-search-episodes").addEventListener("click",()=>{const e=document.querySelector("#input-search-episodes").value.toLowerCase(),c=document.querySelectorAll(".episode");let r=!1;document.querySelector(".not-found").style.display="none",c.forEach(o=>{o.querySelector(".episode__name").textContent.toLowerCase().includes(e)?(o.style.display="block",r=!0):o.style.display="none"}),r||(document.querySelector(".not-found").style.display="flex"),document.querySelector("#input-search-episodes").value=""}),document.querySelector(".filter__select").addEventListener("change",e=>{const c=e.target.value.charAt(0),r=e.target.value;document.querySelector(".filter__input").value="",console.log(c),d.forEach((o,n)=>{o.episode.charAt(2)===c?document.querySelectorAll(".episode")[n].style.display="block":document.querySelectorAll(".episode")[n].style.display="none",r==="All seasons"&&document.querySelectorAll(".episode").forEach(l=>{l.style.display="block"})})});const s=document.querySelector(".modal__close");s&&s.addEventListener("click",()=>{document.querySelector(".backdrop").classList.add("hidden")}),document.querySelector(".backdrop").addEventListener("click",()=>{document.querySelector(".backdrop").classList.add("hidden")})});document.querySelector(".filter__input").addEventListener("input",t=>{const s=t.target.value.toLowerCase();document.querySelectorAll(".episode").forEach(e=>{e.querySelector(".episode__name").textContent.toLowerCase().includes(s)?e.style.display="block":e.style.display="none"})});document.querySelector(".filter__load").addEventListener("click",()=>{a++,u(a).then(t=>{document.querySelector(".not-found").style.display="none",d=[...d,...t.results],document.querySelector(".filter__list").insertAdjacentHTML("beforeend",i(t.results))})});
